# STATUS OPERACIONAL - VoiceWoot con FreeSWITCH

## Timestamp: 2025-10-25 13:41 (CDT)

---

## ‚úÖ COMPONENTES ACTIVOS

### Frontend (React + Vite)
- **Status**: üü¢ CORRIENDO
- **URL**: http://localhost:3000
- **Puerto**: 3000
- **Proceso**: `npm run dev`
- **Verificaci√≥n**: `curl http://localhost:3000` ‚Üí 200 OK
- **Features**: DIDs page, Dashboard, Trunks, Calls, Agents, Insights

### Backend (Node.js + Fastify)
- **Status**: üü¢ CORRIENDO
- **URL**: http://localhost:3001
- **Puerto**: 3001
- **Proceso**: `npm run dev` (via ts-node-dev)
- **Verificaci√≥n**: `curl http://localhost:3001/health` ‚Üí 200 OK
- **APIs**:
  - `GET /health` ‚Üí 200 OK ‚úÖ
  - `GET /api/dids` ‚Üí 5 DIDs loaded ‚úÖ
  - `POST /api/calls/originate` ‚Üí Ready (ESL pending)
  - `GET /api/freeswitch/status` ‚Üí ESL checking...

### Database (SQLite)
- **Status**: üü¢ CORRIENDO
- **Location**: `/Users/arturopinzon/Downloads/asuputamadre/memeringo/dev.db`
- **Size**: ~200KB
- **Tables**: 5 (Account, User, SipTrunk, Did, CallLog)
- **Seed Data**: ‚úÖ Loaded
  - 1 Account: `acc_default`
  - 1 User: `admin@voicewoot.com`
  - 2 SIP Trunks: Main Provider MX, Backup Provider
  - 5 DIDs: +525585261234, +523341605678, +14155552671, +442079460000, +573101234567

### FreeSWITCH (safarov/freeswitch:latest)
- **Status**: üü¢ CONTENEDOR CORRIENDO
- **Container**: freeswitch_pbx
- **Docker**: Running (health: starting)
- **Puertos Abiertos**:
  - 5060/UDP ‚Üí SIP
  - 5061/TCP ‚Üí SIP TLS
  - 7443/TCP ‚Üí WebRTC WSS
  - **8021/TCP ‚Üí ESL (Event Socket Layer)** ‚úÖ ESCUCHANDO
  - 16384-16400/UDP ‚Üí RTP (reducido para macOS)
- **Configuraci√≥n**: `/Users/arturopinzon/Downloads/asuputamadre/memeringo/freeswitch/conf/`
  - switch.conf.xml
  - vars.xml
  - sofia_profiles/external.xml
  - dialplan/default.xml
  - autoload_configs/event_socket.conf.xml

---

## ‚ö†Ô∏è ESTADO ACTUAL DEL ESL (Event Socket Layer)

### Problema Detectado
- Puerto 8021 est√° abierto: `nc -zv localhost 8021` ‚Üí ‚úÖ Connection succeeded
- Pero FreeSWITCH ESL no responde a autenticaci√≥n
- Backend intenta conectar: `Connecting to FreeSWITCH ESL at localhost:8021...` ‚Üí Desconexi√≥n inmediata
- Prueba manual: `(echo "auth ClueCon"; sleep 1; echo "status") | nc localhost 8021` ‚Üí Sin respuesta

### Logs del Contenedor FreeSWITCH
```
ERROR: Could not set nice level
ERROR: Failed to set SCHED_FIFO scheduler (Operation not permitted)
[ERR] sofia.c:5178 Invalid ext-rtp-ip
[ERR] sofia.c:5275 Invalid ext-sip-ip
[CRIT] mod_event_socket.c:2960 Cannot get information about IP address ::
```

### Ra√≠z del Problema
- Imagen safarov/freeswitch est√° usando configuraci√≥n vanilla por defecto
- Nuestros archivos XML en `./freeswitch/conf/` no est√°n siendo cargados correctamente
- Necesario: Usar configuraci√≥n vanilla para Sofia/SIP o archivos XML correctos para ESL

---

## üîß PR√ìXIMOS PASOS INMEDIATOS

### Opci√≥n A: Usar Configuraci√≥n Vanilla (Recomendada - M√°s R√°pido)
1. Copiar configuraci√≥n vanilla del contenedor
2. Modificar solo event_socket.conf.xml
3. Reiniciar contenedor

### Opci√≥n B: Debuggear Configuraci√≥n XML (M√°s Tiempo)
1. Verificar rutas exactas en Docker
2. Validar sintaxis XML completa
3. Agregar logging de FreeSWITCH

### Opci√≥n C: Cambiar a Imagen Alternativa
1. Probar `bdfoster/freeswitch` o `praekeltfoundation/freeswitch`
2. Puede tener mejor soporte para ESL out-of-box

---

##  üìä ESTAD√çSTICAS

| Componente | Estado | Tiempo Activo |
|-----------|--------|--------------|
| Frontend | ‚úÖ | 2 min |
| Backend | ‚úÖ | 3 min |
| Database | ‚úÖ | Persistente |
| FreeSWITCH | ‚úÖ | 3 min |
| ESL Connection | ‚è≥ | Intentando... |
| Sistema General | üü° | 80% Funcional |

---

## üéØ META

Cuando ESL est√© conectado (backend mostrar√° `connected: true`):
- [ ] Prueba de echo: `POST /api/calls/originate` con destino `9999`
- [ ] Prueba de llamada real: Usar uno de los 5 DIDs configurados
- [ ] Grabaci√≥n: Verificar que `/usr/local/freeswitch/recordings` funcione
- [ ] Dashboard: Mostrar llamadas en tiempo real

---

## üöÄ COMANDOS √öTILES

### Ver logs de FreeSWITCH
```bash
docker logs freeswitch_pbx -f
```

### Ver logs del Backend
```bash
# (est√° en el terminal bg con npm run dev)
# o
ps aux | grep "npm run dev"
```

### Ver status de Docker
```bash
cd /Users/arturopinzon/Downloads/asuputamadre/memeringo && \
docker-compose -f docker-compose-freeswitch-only.yml ps
```

### Probar Backend
```bash
curl http://localhost:3001/health
curl http://localhost:3001/api/dids | jq .
curl http://localhost:3001/api/freeswitch/status | jq .
```

### Probar Frontend
```bash
curl http://localhost:3000 | head -20
```

---

## üìù NOTAS

- Homebrew install de FreeSWITCH en macOS no funcion√≥ (binario no compilado)
- Docker es la soluci√≥n correcta para development
- L√≠mite de archivos abiertos (ulimit) aumentado a 8192 para soporte de RTP
- Rango RTP reducido (16384-16400) por limitaciones de macOS
- Backend y Frontend corriendo con `npm run dev` en paralelo
- Base de datos SQLite local (m√°s r√°pida que PostgreSQL en dev)

---

**Pr√≥xima Acci√≥n**: Resolver conexi√≥n ESL ‚Üí `curl http://localhost:3001/api/freeswitch/status` debe retornar `{"connected": true, ...}`
